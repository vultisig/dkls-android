/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.3.0
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.silencelaboratories.goschnorr;

public final class lib_error {
  public final static lib_error LIB_OK = new lib_error("LIB_OK");
  public final static lib_error LIB_INVALID_HANDLE = new lib_error("LIB_INVALID_HANDLE");
  public final static lib_error LIB_HANDLE_IN_USE = new lib_error("LIB_HANDLE_IN_USE");
  public final static lib_error LIB_INVALID_HANDLE_TYPE = new lib_error("LIB_INVALID_HANDLE_TYPE");
  public final static lib_error LIB_NULL_PTR = new lib_error("LIB_NULL_PTR");
  public final static lib_error LIB_INVALID_BUFFER_SIZE = new lib_error("LIB_INVALID_BUFFER_SIZE");
  public final static lib_error LIB_INVALID_SESSION_STATE = new lib_error("LIB_INVALID_SESSION_STATE");
  public final static lib_error LIB_UNKNOWN_ERROR = new lib_error("LIB_UNKNOWN_ERROR");
  public final static lib_error LIB_SERIALIZATION_ERROR = new lib_error("LIB_SERIALIZATION_ERROR");
  public final static lib_error LIB_INVALID_DERIVATION_PATH_STR = new lib_error("LIB_INVALID_DERIVATION_PATH_STR");
  public final static lib_error LIB_DERIVATION_ERROR = new lib_error("LIB_DERIVATION_ERROR");
  public final static lib_error LIB_SETUP_MESSAGE_VALIDATION = new lib_error("LIB_SETUP_MESSAGE_VALIDATION");
  public final static lib_error LIB_NON_EMPTY_OUTPUT_BUFFER = new lib_error("LIB_NON_EMPTY_OUTPUT_BUFFER");
  public final static lib_error LIB_SIGNGEN_ERROR = new lib_error("LIB_SIGNGEN_ERROR");
  public final static lib_error LIB_KEYGEN_ERROR = new lib_error("LIB_KEYGEN_ERROR");
  public final static lib_error LIB_KEY_EXPORT_ERROR = new lib_error("LIB_KEY_EXPORT_ERROR");
  public final static lib_error LIB_INVALID_THRESHOLD = new lib_error("LIB_INVALID_THRESHOLD");
  public final static lib_error LIB_INVALID_PARTY_LIST = new lib_error("LIB_INVALID_PARTY_LIST");
  public final static lib_error LIB_INVALID_OLD_PARTY_LIST = new lib_error("LIB_INVALID_OLD_PARTY_LIST");
  public final static lib_error LIB_INVALID_NEW_PARTY_LIST = new lib_error("LIB_INVALID_NEW_PARTY_LIST");
  public final static lib_error LIB_QC_ERROR = new lib_error("LIB_QC_ERROR");
  public final static lib_error LIB_ABORT_PROTOCOL_PARTY_1 = new lib_error("LIB_ABORT_PROTOCOL_PARTY_1", goschnorrJNI.LIB_ABORT_PROTOCOL_PARTY_1_get());
  public final static lib_error LIB_ABORT_PROTOCOL_PARTY_2 = new lib_error("LIB_ABORT_PROTOCOL_PARTY_2");
  public final static lib_error LIB_ABORT_PROTOCOL_PARTY_3 = new lib_error("LIB_ABORT_PROTOCOL_PARTY_3");
  public final static lib_error LIB_ABORT_PROTOCOL_PARTY_4 = new lib_error("LIB_ABORT_PROTOCOL_PARTY_4");
  public final static lib_error LIB_ABORT_PROTOCOL_PARTY_5 = new lib_error("LIB_ABORT_PROTOCOL_PARTY_5");
  public final static lib_error LIB_ABORT_PROTOCOL_PARTY_6 = new lib_error("LIB_ABORT_PROTOCOL_PARTY_6");
  public final static lib_error LIB_ABORT_PROTOCOL_PARTY_7 = new lib_error("LIB_ABORT_PROTOCOL_PARTY_7");
  public final static lib_error LIB_ABORT_PROTOCOL_PARTY_8 = new lib_error("LIB_ABORT_PROTOCOL_PARTY_8");
  public final static lib_error LIB_ABORT_PROTOCOL_PARTY_9 = new lib_error("LIB_ABORT_PROTOCOL_PARTY_9");
  public final static lib_error LIB_ABORT_PROTOCOL_PARTY_10 = new lib_error("LIB_ABORT_PROTOCOL_PARTY_10");

  public final int swigValue() {
    return swigValue;
  }

  public String toString() {
    return swigName;
  }

  public static lib_error swigToEnum(int swigValue) {
    if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
      return swigValues[swigValue];
    for (int i = 0; i < swigValues.length; i++)
      if (swigValues[i].swigValue == swigValue)
        return swigValues[i];
    throw new IllegalArgumentException("No enum " + lib_error.class + " with value " + swigValue);
  }

  private lib_error(String swigName) {
    this.swigName = swigName;
    this.swigValue = swigNext++;
  }

  private lib_error(String swigName, int swigValue) {
    this.swigName = swigName;
    this.swigValue = swigValue;
    swigNext = swigValue+1;
  }

  private lib_error(String swigName, lib_error swigEnum) {
    this.swigName = swigName;
    this.swigValue = swigEnum.swigValue;
    swigNext = this.swigValue+1;
  }

  private static lib_error[] swigValues = { LIB_OK, LIB_INVALID_HANDLE, LIB_HANDLE_IN_USE, LIB_INVALID_HANDLE_TYPE, LIB_NULL_PTR, LIB_INVALID_BUFFER_SIZE, LIB_INVALID_SESSION_STATE, LIB_UNKNOWN_ERROR, LIB_SERIALIZATION_ERROR, LIB_INVALID_DERIVATION_PATH_STR, LIB_DERIVATION_ERROR, LIB_SETUP_MESSAGE_VALIDATION, LIB_NON_EMPTY_OUTPUT_BUFFER, LIB_SIGNGEN_ERROR, LIB_KEYGEN_ERROR, LIB_KEY_EXPORT_ERROR, LIB_INVALID_THRESHOLD, LIB_INVALID_PARTY_LIST, LIB_INVALID_OLD_PARTY_LIST, LIB_INVALID_NEW_PARTY_LIST, LIB_QC_ERROR, LIB_ABORT_PROTOCOL_PARTY_1, LIB_ABORT_PROTOCOL_PARTY_2, LIB_ABORT_PROTOCOL_PARTY_3, LIB_ABORT_PROTOCOL_PARTY_4, LIB_ABORT_PROTOCOL_PARTY_5, LIB_ABORT_PROTOCOL_PARTY_6, LIB_ABORT_PROTOCOL_PARTY_7, LIB_ABORT_PROTOCOL_PARTY_8, LIB_ABORT_PROTOCOL_PARTY_9, LIB_ABORT_PROTOCOL_PARTY_10 };
  private static int swigNext = 0;
  private final int swigValue;
  private final String swigName;
}

